<?php

/**
 * @wordpress-plugin
 * Plugin Name:       Kntnt Fix for Kadence Theme Breadcrumbs
 * Plugin URI:        https://www.kntnt.com/
 * Description:       Improves how breadcrumbs are generated by Kadence Theme.
 * Version:           1.1.0
 * Author:            Thomas Barregren
 * Author URI:        https://www.kntnt.com/
 * License:           GPL-3.0+
 * License URI:       http://www.gnu.org/licenses/gpl-3.0.txt
 */

namespace Kntnt\Kadence_Theme_Breadcrumb_Fixes;

defined( 'ABSPATH' ) && new Plugin();

final class Plugin {

	private $args;

	private $settings;

	private $html;

	private $sep;

	private $link;

	private $the_title_hooks;

	public function __construct() {
		add_filter( 'kadence_local_breadcrumb_args', [ $this, 'kadence_local_breadcrumb_args' ], 9999 );
		add_filter( 'kadence_breadcrumb_args', [ $this, 'kadence_breadcrumb_args' ] );
		add_filter( 'kadence_breadcrumbs_after_home', [ $this, 'kadence_breadcrumbs_after_home' ] );
		add_filter( 'kadence_breadcrumb_html', [ $this, 'kadence_breadcrumb_html' ] );
	}

	public function kadence_local_breadcrumb_args( $args ) {
		$this->args = $args;
		return $args;
	}

	public function kadence_breadcrumb_args( $args ) {
		$this->settings = array(
			'home'             => true,
			'home_icon'        => \Kadence\kadence()->option( 'breadcrumb_home_icon' ),
			'before'           => '<span class="kadence-bread-current">',
			'after'            => '</span>',
			'home_link'        => home_url( '/' ),
			'wrap_before'      => '<nav id="kadence-breadcrumbs" aria-label="' . esc_attr__( 'Breadcrumbs', 'kadence' ) . '"  class="kadence-breadcrumbs"><div class="kadence-breadcrumb-container"' . ( $this->args['color_style'] ? ' style="' . esc_attr( $this->args['color_style'] ) . '"' : '' ) . '>',
			'wrap_after'       => '</div></nav>',
			'delimiter'        => 'Â»',
			'delimiter_before' => '<span class="bc-delimiter">',
			'delimiter_after'  => '</span>',
			'link_before'      => '<span>',
			'link_after'       => '</span>',
			'link_in_before'   => '<span>',
			'link_in_after'    => '</span>',
		);
		return $this->settings;
	}

	public function kadence_breadcrumbs_after_home( $html ) {

		global $wp_filter;
		$this->the_title_hooks = $wp_filter['the_title'];
		unset( $wp_filter['the_title'] );

		$this->html = $html;
		$this->sep  = ' ' . $this->settings['delimiter_before'] . $this->settings['delimiter'] . $this->settings['delimiter_after'] . ' ';
		$this->link = $this->settings['link_before'] . '<a href="%1$s" itemprop="url" ' . ( $this->args['color_style'] ? 'style="' . esc_attr( $this->args['color_style'] ) . '"' : '' ) . '>' . $this->settings['link_in_before'] . '%2$s' . $this->settings['link_in_after'] . '</a>' . $this->settings['link_after'];

		return $html;

	}

	public function kadence_breadcrumb_html( $html ) {

		global $wp_filter;
		$wp_filter['the_title'] = $this->the_title_hooks;

		if ( ! is_front_page() && is_home() || is_category() ) {

			$page          = get_post( get_option( 'page_for_posts' ) );
			$category_name = $page->post_title;
			$category_link = get_permalink( $page );
			$html          = $this->html;

			if ( is_category() ) {

				$html .= sprintf( $this->link, $category_link, $category_name ) . $this->sep;

				$term      = get_queried_object();
				$ancestors = get_ancestors( $term->term_id, $term->taxonomy );
				$ancestors = array_reverse( $ancestors );
				foreach ( $ancestors as $ancestor ) {
					$ancestor = get_term( $ancestor, 'category' );
					$html     .= sprintf( $this->link, get_term_link( $ancestor->slug, 'category' ), $ancestor->name ) . $this->sep;
				}

			}

			$html .= $this->settings['wrap_after'];

		}

		return $html;

	}

}